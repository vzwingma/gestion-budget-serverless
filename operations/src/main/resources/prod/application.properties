# configure the MongoDB client for Atlas
# by environment variable.
# - QUARKUS_MONGODB_CONNECTION-STRING = mongodb+srv://<login>:<mdp>@cluster<name>.mongodb.net/<database>?retryWrites=true&w=majority
# - QUARKUS_MONGODB_DATABASE = <database>
quarkus.application.name=API Op√©rations
# configure the MongoDB client for Atlas
quarkus.mongodb.connection-string=${QUARKUS_MONGODB_CONNECTION_STRING:mongodb://localhost:27017}
quarkus.mongodb.database=${QUARKUS_MONGODB_DATABASE:database}
quarkus.mongodb.metrics.enabled=true
quarkus.http.enable-compression=true
quarkus.resteasy.gzip.enabled=true
quarkus.resteasy.gzip.max-input=10M
# CORS Param. C'est l'API Gateway en frontal qui s'en charge
quarkus.http.cors=true
quarkus.http.cors.origins=${APP_CONFIG_URL_IHM:http://localhost:3000}
quarkus.http.cors.headers='Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'
quarkus.http.cors.methods=DELETE,GET,HEAD,OPTIONS,POST,PUT
# configure the REST Clients
resteasy.role.based.security=true
quarkus.rest-client.parametrages-service.url=${APP_CONFIG_URL_BACKENDS:http://localhost:8091}
quarkus.rest-client.parametrages-service.scope=javax.inject.Singleton
quarkus.rest-client.comptes-service.url=${APP_CONFIG_URL_BACKENDS:http://localhost:8092}
quarkus.rest-client.comptes-service.scope=javax.inject.Singleton
# Logging
quarkus.log.level=${QUARKUS_LOG_LEVEL:INFO}
quarkus.log.category."org.mongodb.driver".level=${MONGODB_LOG_LEVEL:WARN}
quarkus.log.category."io.github.vzwingma.finances.budget.serverless.services.operations".level=${QUARKUS_LOG_LEVEL:INFO}
quarkus.log.category."io.github.vzwingma.finances.budget.services.communs".level=${QUARKUS_LOG_LEVEL:INFO}
quarkus.log.console.format=%d{HH:mm:ss} %-5p [traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}], [%c{2.}] %X{budgetContext} %s%e%n
# Enable tracing commands in mongodb client
quarkus.mongodb.tracing.enabled=true


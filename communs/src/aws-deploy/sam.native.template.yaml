  AWSTemplateFormatVersion: '2010-09-09'
  Transform: AWS::Serverless-2016-10-31
  Description: Application Budget - __VERSION__ - __ENV__ - AWS Serverless Quarkus backends
  Globals:
    Api:
      EndpointConfiguration: REGIONAL
      BinaryMediaTypes:
        - "*/*"
    Function:
      Timeout: 15
      Environment:
        Variables:
          DISABLE_SIGNAL_HANDLERS: true
          QUARKUS_MONGODB_CONNECTION_STRING: __DATABASE_URL__
          QUARKUS_MONGODB_DATABASE: __DATABASE_NAME__
          APP_CONFIG_URL_IHM: __APP_CONFIG_URL_IHM__
          QUARKUS_LOG_LEVEL: __QUARKUS_LOG_LEVEL__
          MONGODB_LOG_LEVEL: __MONGODB_LOG_LEVEL__

  Resources:
    ParametragesNative__ENV__:
      Type: AWS::Serverless::Function
      Properties:
        Handler: not.used.in.provided.runtimei
        Architectures: [arm64]
        Runtime: provided.al2
        CodeUri: parametrages/function.zip
        Description: µService Paramétrages __ENV__
        MemorySize: 128
        Policies: AWSLambdaBasicExecutionRole
        Events:
          GetResource:
            Type: Api
            Properties:
              Path: /parametres/v2/{uri+}
              Method: any

    UtilisateursNative__ENV__:
      Type: AWS::Serverless::Function
      Properties:
        Handler: not.used.in.provided.runtimei
        Architectures: [arm64]
        Runtime: provided.al2
        CodeUri: utilisateurs/function.zip
        Description: µService Utilisateurs __ENV__
        MemorySize: 128
        Policies: AWSLambdaBasicExecutionRole
        Events:
          GetResource:
            Type: Api
            Properties:
              Path: /utilisateurs/v2/{uri+}
              Method: any


    ComptesNative__ENV__:
      Type: AWS::Serverless::Function
      Properties:
        Handler: not.used.in.provided.runtimei
        Architectures: [arm64]
        Runtime: provided.al2
        CodeUri: comptes/function.zip
        Description: µService Comptes __ENV__
        MemorySize: 128
        Policies: AWSLambdaBasicExecutionRole
        Events:
          GetResource:
            Type: Api
            Properties:
              Path: /comptes/v2/{uri+}
              Method: any


    OperationsNative__ENV__:
      Type: AWS::Serverless::Function
      Properties:
        Handler: not.used.in.provided.runtimei
        Architectures: [arm64]
        Runtime: provided.al2
        CodeUri: operations/function.zip
        Description: µService Opérations __ENV__
        MemorySize: 128
        Policies: AWSLambdaBasicExecutionRole
        Environment:
          Variables:
            APP_CONFIG_URL_BACKENDS: __APP_CONFIG_URL_BACKENDS__
        Events:
          GetResource:
            Type: Api
            Properties:
              Path: /budgets/v2/{uri+}
              Method: any

  Outputs:
    ParametragesNativeApi__ENV__:
      Description: URL __ENV__ for Parametrages API
      Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/__ENV__/parametres'
      Export:
        Name: ParametragesNative__ENV__
    UtilisateursNativeApi__ENV__:
      Description: URL __ENV__ for Utilisateurs API
      Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/__ENV__/utilisateurs'
      Export:
        Name: UtilisateursNative__ENV__
    ComptesNativeApi__ENV__:
      Description: URL __ENV__ for Parametrages API
      Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/__ENV__/comptes'
      Export:
        Name: ComptesNative__ENV__
    OperationsNativeApi__ENV__:
      Description: URL __ENV__ for Budgets & Opérations API
      Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/__ENV__/budgets'
      Export:
        Name: OperationsNative__ENV__
